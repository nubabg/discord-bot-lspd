import os
import discord
from discord.ext import commands
import gspread
from oauth2client.service_account import ServiceAccountCredentials
from datetime import datetime, timedelta
import time
import pytz
import json

# –ù–∞—Å—Ç—Ä–æ–π–≤–∞–Ω–µ –Ω–∞ —á–∞—Å–æ–≤–∞—Ç–∞ –∑–æ–Ω–∞ –∑–∞ –°–æ—Ñ–∏—è
sofia_tz = pytz.timezone("Europe/Sofia")

# –í–∑–∏–º–∞–Ω–µ –Ω–∞ —Ç–æ–∫–µ–Ω–∞ –æ—Ç —Å—Ä–µ–¥–∞—Ç–∞
TOKEN = os.getenv("DISCORD_TOKEN")
if not TOKEN:
    print("‚ùå –ì—Ä–µ—à–∫–∞: DISCORD_TOKEN –Ω–µ –µ –Ω–∞–º–µ—Ä–µ–Ω!")
    exit(1)

# –°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ intents
intents = discord.Intents.default()
intents.members = True
intents.message_content = True
bot = commands.Bot(command_prefix="/", intents=intents)

# --- –í—Ä—ä–∑–∫–∞ —Å Google Sheets ---
SHEET_NAME = "LSPD BOT"
scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]

credentials_content = os.getenv("CREDENTIALS_JSON")
if not credentials_content:
    print("‚ùå –ì—Ä–µ—à–∫–∞: CREDENTIALS_JSON –Ω–µ –µ –∑–∞–¥–∞–¥–µ–Ω!")
    exit(1)

try:
    creds_dict = json.loads(credentials_content)
    creds = ServiceAccountCredentials.from_json_keyfile_dict(creds_dict, scope)
    client = gspread.authorize(creds)

    shifts_sheet = client.open(SHEET_NAME).worksheet("Shifts")
    leaves_sheet = client.open(SHEET_NAME).worksheet("Leaves")
    print("‚úÖ Google Sheets —Å–≤—ä—Ä–∑–∞–Ω —É—Å–ø–µ—à–Ω–æ!")

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —Å—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ —Ö–µ–¥—ä—Ä–∏, –∞–∫–æ –ª–∏–ø—Å–≤–∞—Ç
    if not shifts_sheet.get_all_values():
        shifts_sheet.append_row(["–ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª", "–ù–∞—á–∞–ª–æ", "–ö—Ä–∞–π", "–ò–∑—Ä–∞–±–æ—Ç–µ–Ω–æ –≤—Ä–µ–º–µ"])

    if not leaves_sheet.get_all_values():
        leaves_sheet.append_row(["–ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª", "–ù–∞—á–∞–ª–æ –Ω–∞ –æ—Ç–ø—É—Å–∫–∞", "–ö—Ä–∞–π –Ω–∞ –æ—Ç–ø—É—Å–∫–∞", "–û–±—â–æ –¥–Ω–∏", "–ü—Ä–∏—á–∏–Ω–∞"])
except Exception as e:
    print(f"‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –≤—Ä—ä–∑–∫–∞—Ç–∞ —Å Google Sheets: {e}")
    exit(1)

# --- –ü–æ–º–æ—â–Ω–∏ —Ñ—É–Ω–∫—Ü–∏–∏ ---
def get_username_and_display(interaction):
    """
    –í—Ä—ä—â–∞:
      username -> —Å—Ç–∞–±–∏–ª–Ω–æ Discord username (–±–µ–∑ #tag)
      display  -> —Ç–µ–∫—Å—Ç –∑–∞ Row A: 'username (nickname)'
    """
    username = interaction.user.name
    if interaction.guild:
        member = interaction.guild.get_member(interaction.user.id)
        nickname = member.nick if member and member.nick else interaction.user.name
    else:
        nickname = interaction.user.name
    display = f"{username} ({nickname})"
    return username, display

def _row_matches_username(cell_value: str, username: str) -> bool:
    """
    –°—ä–≤–ø–∞–¥–∞ –ª–∏ –¥–∞–¥–µ–Ω–∞ A-–∫–ª–µ—Ç–∫–∞ —Å username-–∞:
    - —Ç–æ—á–µ–Ω username, –∏–ª–∏
    - –∑–∞–ø–æ—á–≤–∞ —Å 'username (' (—Ç.–µ. 'username (nickname)')
    """
    if not cell_value:
        return False
    return (cell_value == username) or cell_value.startswith(username + " (")

# --- –ö–æ–º–∞–Ω–¥–∏ –Ω–∞ –±–æ—Ç–∞ ---

# üìå –ö–æ–º–∞–Ω–¥–∞ –∑–∞ –∑–∞–ø–æ—á–≤–∞–Ω–µ –Ω–∞ —Å–º—è–Ω–∞
@bot.tree.command(name="startshift", description="–ó–∞–ø–æ—á–≤–∞ —Å–º—è–Ω–∞—Ç–∞ –∏ –∑–∞–ø–∏—Å–≤–∞ –≤—Ä–µ–º–µ—Ç–æ –Ω–∞ –≤–ª–∏–∑–∞–Ω–µ")
async def startshift(interaction: discord.Interaction):
    try:
        await interaction.response.defer(ephemeral=False)
    except Exception as e:
        print(f"[STARTSHIFT] –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ defer: {e}")
        return

    t0 = time.time()
    username, display = get_username_and_display(interaction)
    start_shift_time = datetime.now(sofia_tz).strftime("%Y-%m-%d %H:%M:%S")
    print(f"[STARTSHIFT] –ù–∞—á–∞–ª–æ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞ {display} ({username}) –≤ {start_shift_time}")

    try:
        rows = shifts_sheet.get_all_values()  # –≤–∫–ª—é—á–≤–∞ —Ö–µ–¥—ä—Ä
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞ –∞–∫—Ç–∏–≤–Ω–∞ —Å–º—è–Ω–∞ –ø–æ username (–Ω–∏–∫–Ω–µ–π–º—ä—Ç —Å–µ –∏–≥–Ω–æ—Ä–∏—Ä–∞)
        for i, row in enumerate(rows[1:], start=2):
            a = row[0] if len(row) > 0 else ""
            c = row[2] if len(row) > 2 else ""
            if _row_matches_username(a, username) and (c is None or c == ""):
                await interaction.followup.send("‚ùå –í–µ—á–µ –∏–º–∞—à –∞–∫—Ç–∏–≤–Ω–∞ —Å–º—è–Ω–∞!", ephemeral=False)
                print(f"[STARTSHIFT] –ê–∫—Ç–∏–≤–Ω–∞ —Å–º—è–Ω–∞ –æ—Ç–∫—Ä–∏—Ç–∞ –∑–∞ {display}, –∑–∞–≤—ä—Ä—à–∏ –∑–∞ {time.time() - t0:.2f} —Å–µ–∫—É–Ω–¥–∏")
                return

        # –ó–∞–ø–∏—Å–≤–∞–º–µ –Ω–æ–≤–∏—è —Ä–µ–¥
        shifts_sheet.append_row([display, start_shift_time, "", ""])
        await interaction.followup.send(f"‚úÖ {display} –∑–∞–ø–æ—á–Ω–∞ —Å–º—è–Ω–∞—Ç–∞ –≤ {start_shift_time}", ephemeral=False)
        print(f"[STARTSHIFT] –£—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–≤–∞–Ω–µ –∑–∞ {display}, –∑–∞–≤—ä—Ä—à–∏ –∑–∞ {time.time() - t0:.2f} —Å–µ–∫—É–Ω–¥–∏")
    except Exception as e:
        print(f"[STARTSHIFT] –ù–µ–æ–±—Ä–∞–±–æ—Ç–µ–Ω–∞ –≥—Ä–µ—à–∫–∞: {e}")
        await interaction.followup.send("‚ùå –í—ä–∑–Ω–∏–∫–Ω–∞ –≥—Ä–µ—à–∫–∞ –ø—Ä–∏ –∑–∞–ø–æ—á–≤–∞–Ω–µ –Ω–∞ —Å–º—è–Ω–∞—Ç–∞!", ephemeral=False)

# üìå –ö–æ–º–∞–Ω–¥–∞ –∑–∞ –ø—Ä–∏–∫–ª—é—á–≤–∞–Ω–µ –Ω–∞ —Å–º—è–Ω–∞
@bot.tree.command(name="endshift", description="–ü—Ä–∏–∫–ª—é—á–≤–∞ —Å–º—è–Ω–∞—Ç–∞ –∏ –∑–∞–ø–∏—Å–≤–∞ –≤—Ä–µ–º–µ—Ç–æ –Ω–∞ –∏–∑–ª–∏–∑–∞–Ω–µ")
async def endshift(interaction: discord.Interaction):
    try:
        await interaction.response.defer(ephemeral=False)
    except Exception as e:
        print(f"[ENDSHIFT] –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ defer: {e}")
        return

    t0 = time.time()
    username, display = get_username_and_display(interaction)
    end_time = datetime.now(sofia_tz).strftime("%Y-%m-%d %H:%M:%S")
    print(f"[ENDSHIFT] –ù–∞—á–∞–ª–æ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞ {display} ({username}) –≤ {end_time}")

    try:
        rows = shifts_sheet.get_all_values()
        print(f"[ENDSHIFT] –ò–∑–≤–ª–∏—á–∞–Ω–µ –Ω–∞ –∑–∞–ø–∏—Å–∏ –∑–∞–≤—ä—Ä—à–∏ –∑–∞ {time.time() - t0:.2f} —Å–µ–∫—É–Ω–¥–∏")

        # –¢—ä—Ä—Å–∏–º –æ—Ç–¥–æ–ª—É-–Ω–∞–≥–æ—Ä–µ –ø–æ—Å–ª–µ–¥–Ω–∞—Ç–∞ –æ—Ç–≤–æ—Ä–µ–Ω–∞ —Å–º—è–Ω–∞ –ø–æ username
        target_row_index = None
        for i in range(len(rows) - 1, 0, -1):
            row = rows[i]
            a = row[0] if len(row) > 0 else ""
            c = row[2] if len(row) > 2 else ""
            if _row_matches_username(a, username) and (c is None or c == ""):
                target_row_index = i + 1  # gspread –µ 1-–±–∞–∑–∏—Ä–∞–Ω–æ; i –µ 0-–±–∞–∑–∏—Ä–∞–Ω –∏–Ω–¥–µ–∫—Å
                break

        if target_row_index is None:
            await interaction.followup.send("‚ùå –ù—è–º–∞ –∑–∞–ø–æ—á–Ω–∞—Ç–∞ —Å–º—è–Ω–∞ –∑–∞ –ø—Ä–∏–∫–ª—é—á–≤–∞–Ω–µ!", ephemeral=False)
            print(f"[ENDSHIFT] –ù—è–º–∞ –∞–∫—Ç–∏–≤–Ω–∞ —Å–º—è–Ω–∞ –∑–∞ {display}, –∑–∞–≤—ä—Ä—à–∏ –∑–∞ {time.time() - t0:.2f} —Å–µ–∫—É–Ω–¥–∏")
            return

        # –ü—Ä–æ—á–∏—Ç–∞–º–µ —Å—Ç–∞—Ä—Ç–∞ –æ—Ç –∫–æ–ª–æ–Ω–∞—Ç–∞ B
        start_time_str = shifts_sheet.cell(target_row_index, 2).value
        start_time_dt = datetime.strptime(start_time_str, "%Y-%m-%d %H:%M:%S")
        end_time_dt = datetime.strptime(end_time, "%Y-%m-%d %H:%M:%S")

        worked_time = end_time_dt - start_time_dt
        worked_hours, remainder = divmod(worked_time.total_seconds(), 3600)
        worked_minutes = int(remainder // 60)
        worked_time_str = f"{int(worked_hours)}—á {worked_minutes}–º–∏–Ω"

        # –û–±–Ω–æ–≤—è–≤–∞–Ω–µ C (–∫—Ä–∞–π) –∏ D (–∏–∑—Ä–∞–±–æ—Ç–µ–Ω–æ)
        shifts_sheet.update(range_name=f"C{target_row_index}", values=[[end_time]])
        shifts_sheet.update(range_name=f"D{target_row_index}", values=[[worked_time_str]])
        print(f"[ENDSHIFT] –ó–∞–ø–∏—Å–≤–∞–Ω–µ –Ω–∞ –∫—Ä–∞–π –∑–∞–≤—ä—Ä—à–∏ –∑–∞ {time.time() - t0:.2f} —Å–µ–∫—É–Ω–¥–∏")

        await interaction.followup.send(
            f"‚úÖ {display} –ø—Ä–∏–∫–ª—é—á–∏ —Å–º—è–Ω–∞—Ç–∞ –≤ {end_time} (‚è≥ {worked_time_str})\n\n"
            "üíº **–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –≤–∏ –∑–∞ –¥–Ω–µ—à–Ω–∞—Ç–∞ –≤–∏ —Å–ª—É–∂–±–∞!**\n"
            "–ê–∫–æ –∏–º–∞—Ç–µ –ø—Ä–æ–±–ª–µ–º –∏–ª–∏ –Ω–µ—Ä–∞–∑–±–∏—Ä–∞—Ç–µ–ª—Å—Ç–≤–æ, –º–æ–ª—è —Å–≤—ä—Ä–∂–µ—Ç–µ —Å–µ —Å —Ä—ä–∫–æ–≤–æ–¥—Å—Ç–≤–æ—Ç–æ –Ω–∞ LSPD.",
            ephemeral=False
        )
        print(f"[ENDSHIFT] –£—Å–ø–µ—à–Ω–æ –ø—Ä–∏–∫–ª—é—á–≤–∞–Ω–µ –∑–∞ {display}, –∑–∞–≤—ä—Ä—à–∏ –∑–∞ {time.time() - t0:.2f} —Å–µ–∫—É–Ω–¥–∏")
    except Exception as e:
        print(f"[ENDSHIFT] –ù–µ–æ–±—Ä–∞–±–æ—Ç–µ–Ω–∞ –≥—Ä–µ—à–∫–∞: {e}")
        try:
            await interaction.followup.send("‚ùå –í—ä–∑–Ω–∏–∫–Ω–∞ –≥—Ä–µ—à–∫–∞ –ø—Ä–∏ –ø—Ä–∏–∫–ª—é—á–≤–∞–Ω–µ –Ω–∞ —Å–º—è–Ω–∞—Ç–∞!", ephemeral=False)
        except Exception as followup_error:
            print(f"[ENDSHIFT] –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∏–∑–ø—Ä–∞—â–∞–Ω–µ –Ω–∞ followup: {followup_error}")

# üìå –ö–æ–º–∞–Ω–¥–∞ –∑–∞ –∑–∞—è–≤–∫–∞ –∑–∞ –æ—Ç–ø—É—Å–∫
@bot.tree.command(name="leave", description="–ó–∞—è–≤–∫–∞ –∑–∞ –æ—Ç–ø—É—Å–∫ –∑–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω –ø–µ—Ä–∏–æ–¥ —Å –ø—Ä–∏—á–∏–Ω–∞")
async def leave(interaction: discord.Interaction, start_date: str, end_date: str, reason: str):
    await interaction.response.defer(ephemeral=False)

    username, display = get_username_and_display(interaction)
    print(f"[LEAVE] –ù–∞—á–∞–ª–æ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞ {display}")

    try:
        start_dt = datetime.strptime(start_date, "%d.%m.%Y")
        end_dt = datetime.strptime(end_date, "%d.%m.%Y")
        total_days = (end_dt - start_dt).days + 1

        if total_days < 1:
            await interaction.followup.send("‚ùå –ì—Ä–µ—à–∫–∞: –ö—Ä–∞–π–Ω–∞—Ç–∞ –¥–∞—Ç–∞ —Ç—Ä—è–±–≤–∞ –¥–∞ –µ —Å–ª–µ–¥ –Ω–∞—á–∞–ª–Ω–∞—Ç–∞!", ephemeral=False)
            return

        current_date = datetime.now(sofia_tz).replace(hour=0, minute=0, second=0, microsecond=0)
        min_allowed_date = current_date - timedelta(days=1)

        if start_dt < min_allowed_date:
            await interaction.followup.send(
                f"‚ùå –ù–µ –º–æ–∂–µ—à –¥–∞ –∑–∞—è–≤–∏—à –æ—Ç–ø—É—Å–∫, –∑–∞–ø–æ—á–≤–∞—â –ø—Ä–µ–¥–∏ {min_allowed_date.strftime('%d.%m.%Y')}! "
                "–ú–∞–∫—Å–∏–º—É–º 1 –¥–µ–Ω –Ω–∞–∑–∞–¥ –µ –ø–æ–∑–≤–æ–ª–µ–Ω.",
                ephemeral=False
            )
            return

        if not reason or reason.strip() == "":
            await interaction.followup.send("‚ùå –ú–æ–ª—è, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏ –ø—Ä–∏—á–∏–Ω–∞ –∑–∞ –æ—Ç–ø—É—Å–∫–∞!", ephemeral=False)
            return

        leaves_sheet.append_row([
            display,
            start_dt.strftime("%Y-%m-%d"),
            end_dt.strftime("%Y-%m-%d"),
            total_days,
            reason
        ])

        await interaction.followup.send(
            f"‚úÖ {display} –∑–∞—è–≤–∏ –æ—Ç–ø—É—Å–∫ –æ—Ç {start_date} –¥–æ {end_date} ({total_days} –¥–Ω–∏)\n"
            f"üìù **–ü—Ä–∏—á–∏–Ω–∞:** {reason}",
            ephemeral=False
        )
    except ValueError as ve:
        print(f"[LEAVE] –ì—Ä–µ—à–∫–∞ –≤ /leave (ValueError): {ve}")
        await interaction.followup.send(
            "‚ùå –ì—Ä–µ—à–µ–Ω —Ñ–æ—Ä–º–∞—Ç –Ω–∞ –¥–∞—Ç–∏—Ç–µ! –ò–∑–ø–æ–ª–∑–≤–∞–π **–î–î.–ú–ú.–ì–ì–ì–ì** (–ø—Ä–∏–º–µ—Ä: 13.03.2025)",
            ephemeral=False
        )
    except Exception as e:
        print(f"[LEAVE] –ù–µ–æ–±—Ä–∞–±–æ—Ç–µ–Ω–∞ –≥—Ä–µ—à–∫–∞: {e}")
        await interaction.followup.send("‚ùå –í—ä–∑–Ω–∏–∫–Ω–∞ –≥—Ä–µ—à–∫–∞ –ø—Ä–∏ –∑–∞—è–≤—è–≤–∞–Ω–µ –Ω–∞ –æ—Ç–ø—É—Å–∫!", ephemeral=False)

# üìå –ö–æ–º–∞–Ω–¥–∞ –∑–∞ –≥–µ–Ω–µ—Ä–∏—Ä–∞–Ω–µ –Ω–∞ –æ—Ç—á–µ—Ç
@bot.tree.command(name="report", description="–ì–µ–Ω–µ—Ä–∏—Ä–∞ –æ—Ç—á–µ—Ç –∑–∞ —Ä–∞–±–æ—Ç–Ω–æ—Ç–æ –≤—Ä–µ–º–µ")
async def report(interaction: discord.Interaction):
    await interaction.response.defer(ephemeral=False)

    username, display = get_username_and_display(interaction)
    print(f"[REPORT] –ù–∞—á–∞–ª–æ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞ {display}")

    try:
        rows = shifts_sheet.get_all_values()
        # –§–∏–ª—Ç—ä—Ä –ø–æ username (A == username –∏–ª–∏ A –∑–∞–ø–æ—á–≤–∞ —Å 'username (')
        user_records = []
        for row in rows[1:]:
            a = row[0] if len(row) > 0 else ""
            if _row_matches_username(a, username):
                user_records.append(row)

        if not user_records:
            await interaction.followup.send("‚ùå –ù—è–º–∞ –∑–∞–ø–∏—Å–∞–Ω–æ —Ä–∞–±–æ—Ç–Ω–æ –≤—Ä–µ–º–µ!", ephemeral=False)
            return

        report_text = f"üìã **–û—Ç—á–µ—Ç –∑–∞ —Ä–∞–±–æ—Ç–Ω–æ—Ç–æ –≤—Ä–µ–º–µ –Ω–∞ {display}:**\n"
        for row in user_records[-15:]:
            start = row[1] if len(row) > 1 else "‚ùì"
            end = row[2] if len(row) > 2 else "‚ùì"
            worked_time = row[3] if len(row) > 3 else "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
            report_text += f"üìÖ {start} ‚ûù {end} ‚è≥ {worked_time}\n"

        await interaction.followup.send(report_text, ephemeral=False)
        print(f"[REPORT] –£—Å–ø–µ—à–Ω–æ –≥–µ–Ω–µ—Ä–∏—Ä–∞–Ω–µ –Ω–∞ –æ—Ç—á–µ—Ç –∑–∞ {display}")
    except Exception as e:
        print(f"[REPORT] –ì—Ä–µ—à–∫–∞ –≤ /report: {e}")
        await interaction.followup.send("‚ùå –í—ä–∑–Ω–∏–∫–Ω–∞ –≥—Ä–µ—à–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∏—Ä–∞–Ω–µ –Ω–∞ –æ—Ç—á–µ—Ç–∞!", ephemeral=False)

# üìå –ö–æ–º–∞–Ω–¥–∞ –∑–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∏
@bot.tree.command(name="documents", description="–ü–æ–∫–∞–∑–≤–∞ –≤–∞–∂–Ω–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∏ –∑–∞ –ø–æ–ª–∏—Ü–∏—è—Ç–∞")
async def documents(interaction: discord.Interaction):
    doc_links = (
        "**üìú –í–∞–∂–Ω–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∏ –Ω–∞ LSPD:**\n\n"
        "üìñ **–ù–∞–∫–∞–∑–∞—Ç–µ–ª–µ–Ω –∫–æ–¥–µ–∫—Å (Penal Code):**\n"
        "üîó [–õ–∏–Ω–∫ –∫—ä–º –¥–æ–∫—É–º–µ–Ω—Ç–∞](https://docs.google.com/spreadsheets/d/1vyCQWnxKUPKknOsIpiXqU_-qC8vpLaHdDQIQu22hz2s/edit?gid=0#gid=0)\n\n"
        "üìï **LSPD Handbook (–†—ä–∫–æ–≤–æ–¥—Å—Ç–≤–æ):**\n"
        "üîó [–õ–∏–Ω–∫ –∫—ä–º –¥–æ–∫—É–º–µ–Ω—Ç–∞](https://docs.google.com/document/d/1eEsR6jwpk0Y38Yw7vr22BlB1w9HiI3qtib-uy_YkWck/edit?tab=t.aho3f2r2d6uw)\n"
    )
    await interaction.response.send_message(doc_links, ephemeral=False)

# --- –°—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ –Ω–∞ –±–æ—Ç–∞ ---
@bot.event
async def on_ready():
    try:
        synced = await bot.tree.sync()
        print(f"‚úÖ –ë–æ—Ç—ä—Ç –µ –æ–Ω–ª–∞–π–Ω! –õ–æ–≥–Ω–∞—Ç –∫–∞—Ç–æ {bot.user}")
        print(f"‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–∞–Ω–∏ –∫–æ–º–∞–Ω–¥–∏: {[cmd.name for cmd in synced]}")
    except Exception as e:
        print(f"‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è: {e}")

bot.run(TOKEN)
