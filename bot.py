import os
import discord
from discord.ext import commands
import gspread
from oauth2client.service_account import ServiceAccountCredentials
from datetime import datetime, timedelta
from dotenv import load_dotenv
import time
import pytz
sofia_tz = pytz.timezone("Europe/Sofia")


# ‚õî –ü—Ä–µ–º–∞—Ö–Ω–∏ dotenv! Railway –Ω—è–º–∞ –Ω—É–∂–¥–∞ –æ—Ç –Ω–µ–≥–æ
# from dotenv import load_dotenv
# load_dotenv()

# ‚úÖ –í–∑–∏–º–∞–Ω–µ –Ω–∞ —Ç–æ–∫–µ–Ω–∞ –æ—Ç —Å—Ä–µ–¥–∞—Ç–∞ (Railway Variables)
TOKEN = os.getenv("DISCORD_TOKEN")

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–ª–∏ —Ç–æ–∫–µ–Ω—ä—Ç –µ –∑–∞—Ä–µ–¥–µ–Ω
if not TOKEN:
    print("‚ùå –ì—Ä–µ—à–∫–∞: DISCORD_TOKEN –Ω–µ –µ –Ω–∞–º–µ—Ä–µ–Ω!")
    exit(1)

# –°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ intents
intents = discord.Intents.default()
intents.members = True
intents.message_content = True

bot = commands.Bot(command_prefix="/", intents=intents)

# –í—Ä—ä–∑–∫–∞ —Å Google Sheets
SHEET_NAME = "LSPD BOT"
scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
import json

credentials_content = os.getenv("CREDENTIALS_JSON")
if not credentials_content:
    print("‚ùå –ì—Ä–µ—à–∫–∞: CREDENTIALS_JSON –Ω–µ –µ –∑–∞–¥–∞–¥–µ–Ω!")
    exit(1)

creds_dict = json.loads(credentials_content)
creds = ServiceAccountCredentials.from_json_keyfile_dict(creds_dict, scope)
client = gspread.authorize(creds)

try:
    shifts_sheet = client.open(SHEET_NAME).worksheet("Shifts")
    leaves_sheet = client.open(SHEET_NAME).worksheet("Leaves")
    print("‚úÖ Google Sheets —Å–≤—ä—Ä–∑–∞–Ω —É—Å–ø–µ—à–Ω–æ!")

    if not shifts_sheet.get_all_values():
        shifts_sheet.append_row(["–ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª", "–ù–∞—á–∞–ª–æ", "–ö—Ä–∞–π", "–ò–∑—Ä–∞–±–æ—Ç–µ–Ω–æ –≤—Ä–µ–º–µ"])

    if not leaves_sheet.get_all_values():
        leaves_sheet.append_row(["–ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª", "–ù–∞—á–∞–ª–æ –Ω–∞ –æ—Ç–ø—É—Å–∫–∞", "–ö—Ä–∞–π –Ω–∞ –æ—Ç–ø—É—Å–∫–∞", "–û–±—â–æ –¥–Ω–∏", "–ü—Ä–∏—á–∏–Ω–∞"])
except Exception as e:
    print(f"‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –≤—Ä—ä–∑–∫–∞—Ç–∞ —Å Google Sheets: {e}")
    exit(1)



# –§—É–Ω–∫—Ü–∏—è –∑–∞ –ø–æ–ª—É—á–∞–≤–∞–Ω–µ –Ω–∞ –∏–º–µ—Ç–æ –≤ —Å—ä—Ä–≤—ä—Ä–∞
def get_nickname(interaction):
    if interaction.guild:
        member = interaction.guild.get_member(interaction.user.id)
        return member.nick if member and member.nick else interaction.user.name
    return interaction.user.name

# üìå –ö–æ–º–∞–Ω–¥–∞ –∑–∞ –∑–∞–ø–æ—á–≤–∞–Ω–µ –Ω–∞ —Å–º—è–Ω–∞
@bot.tree.command(name="startshift", description="–ó–∞–ø–æ—á–≤–∞ —Å–º—è–Ω–∞—Ç–∞ –∏ –∑–∞–ø–∏—Å–≤–∞ –≤—Ä–µ–º–µ—Ç–æ –Ω–∞ –≤–ª–∏–∑–∞–Ω–µ")
async def startshift(interaction: discord.Interaction):
    try:
        await interaction.response.defer(ephemeral=False)
    except Exception as e:
        print(f"[STARTSHIFT] –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ defer: {e}")
        return

    start_time = time.time()
    user = get_nickname(interaction)
    start_shift_time = datetime.now(sofia_tz).strftime("%Y-%m-%d %H:%M:%S")
    print(f"[STARTSHIFT] –ù–∞—á–∞–ª–æ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞ {user} –≤ {start_shift_time}")

    try:
        records = shifts_sheet.get_all_records()
        print(f"[STARTSHIFT] –ò–∑–≤–ª–∏—á–∞–Ω–µ –Ω–∞ –∑–∞–ø–∏—Å–∏ –∑–∞ {user} –∑–∞–≤—ä—Ä—à–∏ –∑–∞ {time.time() - start_time:.2f} —Å–µ–∫—É–Ω–¥–∏")
        for row in records:
            if row.get("–ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª") == user and row.get("–ö—Ä–∞–π") == "":
                await interaction.followup.send("‚ùå –í–µ—á–µ –∏–º–∞—à –∞–∫—Ç–∏–≤–Ω–∞ —Å–º—è–Ω–∞!", ephemeral=False)
                print(f"[STARTSHIFT] –ê–∫—Ç–∏–≤–Ω–∞ —Å–º—è–Ω–∞ –æ—Ç–∫—Ä–∏—Ç–∞ –∑–∞ {user}, –∑–∞–≤—ä—Ä—à–∏ –∑–∞ {time.time() - start_time:.2f} —Å–µ–∫—É–Ω–¥–∏")
                return

        shifts_sheet.append_row([user, start_shift_time, "", ""])
        await interaction.followup.send(f"‚úÖ {user} –∑–∞–ø–æ—á–Ω–∞ —Å–º—è–Ω–∞—Ç–∞ –≤ {start_shift_time}", ephemeral=False)
        print(f"[STARTSHIFT] –£—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–≤–∞–Ω–µ –∑–∞ {user}, –∑–∞–≤—ä—Ä—à–∏ –∑–∞ {time.time() - start_time:.2f} —Å–µ–∫—É–Ω–¥–∏")
    except Exception as e:
        print(f"[STARTSHIFT] –ù–µ–æ–±—Ä–∞–±–æ—Ç–µ–Ω–∞ –≥—Ä–µ—à–∫–∞: {e}")
        await interaction.followup.send("‚ùå –í—ä–∑–Ω–∏–∫–Ω–∞ –≥—Ä–µ—à–∫–∞ –ø—Ä–∏ –∑–∞–ø–æ—á–≤–∞–Ω–µ –Ω–∞ —Å–º—è–Ω–∞—Ç–∞!", ephemeral=False)

# üìå –ö–æ–º–∞–Ω–¥–∞ –∑–∞ –ø—Ä–∏–∫–ª—é—á–≤–∞–Ω–µ –Ω–∞ —Å–º—è–Ω–∞
@bot.tree.command(name="endshift", description="–ü—Ä–∏–∫–ª—é—á–≤–∞ —Å–º—è–Ω–∞—Ç–∞ –∏ –∑–∞–ø–∏—Å–≤–∞ –≤—Ä–µ–º–µ—Ç–æ –Ω–∞ –∏–∑–ª–∏–∑–∞–Ω–µ")
async def endshift(interaction: discord.Interaction):
    try:
        await interaction.response.defer(ephemeral=False)
    except Exception as e:
        print(f"[ENDSHIFT] –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ defer: {e}")
        return

    start_time = time.time()
    user = get_nickname(interaction)
    end_time = datetime.now(sofia_tz).strftime("%Y-%m-%d %H:%M:%S")
    print(f"[ENDSHIFT] –ù–∞—á–∞–ª–æ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞ {user} –≤ {end_time}")

    try:
        records = shifts_sheet.get_all_records()
        print(f"[ENDSHIFT] –ò–∑–≤–ª–∏—á–∞–Ω–µ –Ω–∞ –∑–∞–ø–∏—Å–∏ –∑–∞ {user} –∑–∞–≤—ä—Ä—à–∏ –∑–∞ {time.time() - start_time:.2f} —Å–µ–∫—É–Ω–¥–∏")
        for i, row in enumerate(records, start=2):
            if row.get("–ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª") == user and (row.get("–ö—Ä–∞–π") == "" or row.get("–ö—Ä–∞–π") is None):
                start_time_str = row.get("–ù–∞—á–∞–ª–æ")
                start_time_dt = datetime.strptime(start_time_str, "%Y-%m-%d %H:%M:%S")
                end_time_dt = datetime.strptime(end_time, "%Y-%m-%d %H:%M:%S")
                worked_time = end_time_dt - start_time_dt
                worked_hours, remainder = divmod(worked_time.total_seconds(), 3600)
                worked_minutes = remainder // 60
                worked_time_str = f"{int(worked_hours)}—á {int(worked_minutes)}–º–∏–Ω"
                try:
                    shifts_sheet.update(range_name=f"C{i}", values=[[end_time]])
                    shifts_sheet.update(range_name=f"D{i}", values=[[worked_time_str]])
                    print(f"[ENDSHIFT] –ó–∞–ø–∏—Å–≤–∞–Ω–µ –Ω–∞ –∫—Ä–∞–π –∑–∞ {user} –∑–∞–≤—ä—Ä—à–∏ –∑–∞ {time.time() - start_time:.2f} —Å–µ–∫—É–Ω–¥–∏")
                    await interaction.followup.send(
                        f"‚úÖ {user} –ø—Ä–∏–∫–ª—é—á–∏ —Å–º—è–Ω–∞—Ç–∞ –≤ {end_time} (‚è≥ {worked_time_str})\n\n"
                        "üíº **–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –≤–∏ –∑–∞ –¥–Ω–µ—à–Ω–∞—Ç–∞ –≤–∏ —Å–ª—É–∂–±–∞!**\n"
                        "–ê–∫–æ –∏–º–∞—Ç–µ –ø—Ä–æ–±–ª–µ–º –∏–ª–∏ –Ω–µ—Ä–∞–∑–±–∏—Ä–∞—Ç–µ–ª—Å—Ç–≤–æ, –º–æ–ª—è —Å–≤—ä—Ä–∂–µ—Ç–µ —Å–µ —Å —Ä—ä–∫–æ–≤–æ–¥—Å—Ç–≤–æ—Ç–æ –Ω–∞ LSPD.",
                        ephemeral=False
                    )
                    print(f"[ENDSHIFT] –£—Å–ø–µ—à–Ω–æ –ø—Ä–∏–∫–ª—é—á–≤–∞–Ω–µ –∑–∞ {user}, –∑–∞–≤—ä—Ä—à–∏ –∑–∞ {time.time() - start_time:.2f} —Å–µ–∫—É–Ω–¥–∏")
                    return
                except gspread.exceptions.APIError as e:
                    print(f"[ENDSHIFT] –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤—è–≤–∞–Ω–µ –Ω–∞ Google Sheets: {e}")
                    await interaction.followup.send("‚ùå –í—ä–∑–Ω–∏–∫–Ω–∞ –ø—Ä–æ–±–ª–µ–º —Å Google Sheets!", ephemeral=False)
                    return

        await interaction.followup.send("‚ùå –ù—è–º–∞ –∑–∞–ø–æ—á–Ω–∞—Ç–∞ —Å–º—è–Ω–∞ –∑–∞ –ø—Ä–∏–∫–ª—é—á–≤–∞–Ω–µ!", ephemeral=False)
        print(f"[ENDSHIFT] –ù—è–º–∞ –∞–∫—Ç–∏–≤–Ω–∞ —Å–º—è–Ω–∞ –∑–∞ {user}, –∑–∞–≤—ä—Ä—à–∏ –∑–∞ {time.time() - start_time:.2f} —Å–µ–∫—É–Ω–¥–∏")
    except Exception as e:
        print(f"[ENDSHIFT] –ù–µ–æ–±—Ä–∞–±–æ—Ç–µ–Ω–∞ –≥—Ä–µ—à–∫–∞: {e}")
        try:
            await interaction.followup.send("‚ùå –í—ä–∑–Ω–∏–∫–Ω–∞ –≥—Ä–µ—à–∫–∞ –ø—Ä–∏ –ø—Ä–∏–∫–ª—é—á–≤–∞–Ω–µ –Ω–∞ —Å–º—è–Ω–∞—Ç–∞!", ephemeral=False)
        except Exception as followup_error:
            print(f"[ENDSHIFT] –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∏–∑–ø—Ä–∞—â–∞–Ω–µ –Ω–∞ followup: {followup_error}")

# üìå –ö–æ–º–∞–Ω–¥–∞ –∑–∞ –∑–∞—è–≤–∫–∞ –∑–∞ –æ—Ç–ø—É—Å–∫
@bot.tree.command(name="leave", description="–ó–∞—è–≤–∫–∞ –∑–∞ –æ—Ç–ø—É—Å–∫ –∑–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω –ø–µ—Ä–∏–æ–¥ —Å –ø—Ä–∏—á–∏–Ω–∞")
async def leave(interaction: discord.Interaction, start_date: str, end_date: str, reason: str):
    try:
        await interaction.response.defer(ephemeral=False)
    except Exception as e:
        print(f"[LEAVE] –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ defer: {e}")
        return

    start_time = time.time()
    user = get_nickname(interaction)
    print(f"[LEAVE] –ù–∞—á–∞–ª–æ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞ {user}")

    try:
        start_dt = datetime.strptime(start_date, "%d.%m.%Y")
        end_dt = datetime.strptime(end_date, "%d.%m.%Y")
        total_days = (end_dt - start_dt).days + 1

        if total_days < 1:
            await interaction.followup.send("‚ùå –ì—Ä–µ—à–∫–∞: –ö—Ä–∞–π–Ω–∞—Ç–∞ –¥–∞—Ç–∞ —Ç—Ä—è–±–≤–∞ –¥–∞ –µ —Å–ª–µ–¥ –Ω–∞—á–∞–ª–Ω–∞—Ç–∞!", ephemeral=False)
            print(f"[LEAVE] –ì—Ä–µ—à–∫–∞ –≤ –¥–∞—Ç–∏—Ç–µ –∑–∞ {user}, –∑–∞–≤—ä—Ä—à–∏ –∑–∞ {time.time() - start_time:.2f} —Å–µ–∫—É–Ω–¥–∏")
            return

        current_date = datetime.now(sofia_tz).replace(hour=0, minute=0, second=0, microsecond=0)
        min_allowed_date = current_date - timedelta(days=1)

        if start_dt < min_allowed_date:
            await interaction.followup.send(
                f"‚ùå –ù–µ –º–æ–∂–µ—à –¥–∞ –∑–∞—è–≤–∏—à –æ—Ç–ø—É—Å–∫, –∑–∞–ø–æ—á–≤–∞—â –ø—Ä–µ–¥–∏ {min_allowed_date.strftime('%d.%m.%Y')}! "
                "–ú–∞–∫—Å–∏–º—É–º 1 –¥–µ–Ω –Ω–∞–∑–∞–¥ –µ –ø–æ–∑–≤–æ–ª–µ–Ω.",
                ephemeral=False
            )
            print(f"[LEAVE] –ì—Ä–µ—à–∫–∞: –¥–∞—Ç–∞ –ø—Ä–µ–¥–∏ –ø–æ–∑–≤–æ–ª–µ–Ω–æ—Ç–æ –∑–∞ {user}, –∑–∞–≤—ä—Ä—à–∏ –∑–∞ {time.time() - start_time:.2f} —Å–µ–∫—É–Ω–¥–∏")
            return

        if not reason or reason.strip() == "":
            await interaction.followup.send("‚ùå –ú–æ–ª—è, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏ –ø—Ä–∏—á–∏–Ω–∞ –∑–∞ –æ—Ç–ø—É—Å–∫–∞!", ephemeral=False)
            print(f"[LEAVE] –ì—Ä–µ—à–∫–∞: –ª–∏–ø—Å–≤–∞—â–∞ –ø—Ä–∏—á–∏–Ω–∞ –∑–∞ {user}, –∑–∞–≤—ä—Ä—à–∏ –∑–∞ {time.time() - start_time:.2f} —Å–µ–∫—É–Ω–¥–∏")
            return

        leaves_sheet.append_row([
            user,
            start_dt.strftime("%Y-%m-%d"),
            end_dt.strftime("%Y-%m-%d"),
            total_days,
            reason
        ])
        print(f"[LEAVE] –ó–∞–ø–∏—Å–≤–∞–Ω–µ –Ω–∞ –æ—Ç–ø—É—Å–∫ –∑–∞ {user} –∑–∞–≤—ä—Ä—à–∏ –∑–∞ {time.time() - start_time:.2f} —Å–µ–∫—É–Ω–¥–∏")

        await interaction.followup.send(
            f"‚úÖ {user} –∑–∞—è–≤–∏ –æ—Ç–ø—É—Å–∫ –æ—Ç {start_date} –¥–æ {end_date} ({total_days} –¥–Ω–∏)\n"
            f"üìù **–ü—Ä–∏—á–∏–Ω–∞:** {reason}",
            ephemeral=False
        )
        print(f"[LEAVE] –£—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–≤–∞–Ω–µ –∑–∞ {user}, –∑–∞–≤—ä—Ä—à–∏ –∑–∞ {time.time() - start_time:.2f} —Å–µ–∫—É–Ω–¥–∏")
    except ValueError as ve:
        print(f"[LEAVE] –ì—Ä–µ—à–∫–∞ –≤ /leave (ValueError): {ve}")
        await interaction.followup.send(
            "‚ùå –ì—Ä–µ—à–µ–Ω —Ñ–æ—Ä–º–∞—Ç –Ω–∞ –¥–∞—Ç–∏—Ç–µ! –ò–∑–ø–æ–ª–∑–≤–∞–π **–î–î.–ú–ú.–ì–ì–ì–ì** (–ø—Ä–∏–º–µ—Ä: 13.03.2025)",
            ephemeral=False
        )
    except Exception as e:
        print(f"[LEAVE] –ù–µ–æ–±—Ä–∞–±–æ—Ç–µ–Ω–∞ –≥—Ä–µ—à–∫–∞: {e}")
        await interaction.followup.send("‚ùå –í—ä–∑–Ω–∏–∫–Ω–∞ –≥—Ä–µ—à–∫–∞ –ø—Ä–∏ –∑–∞—è–≤—è–≤–∞–Ω–µ –Ω–∞ –æ—Ç–ø—É—Å–∫!", ephemeral=False)

# üìå –ö–æ–º–∞–Ω–¥–∞ –∑–∞ –≥–µ–Ω–µ—Ä–∏—Ä–∞–Ω–µ –Ω–∞ –æ—Ç—á–µ—Ç
@bot.tree.command(name="report", description="–ì–µ–Ω–µ—Ä–∏—Ä–∞ –æ—Ç—á–µ—Ç –∑–∞ —Ä–∞–±–æ—Ç–Ω–æ—Ç–æ –≤—Ä–µ–º–µ")
async def report(interaction: discord.Interaction):
    try:
        await interaction.response.defer(ephemeral=False)
    except Exception as e:
        print(f"[REPORT] –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ defer: {e}")
        return

    start_time = time.time()
    user = get_nickname(interaction)
    print(f"[REPORT] –ù–∞—á–∞–ª–æ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞ {user}")

    try:
        records = shifts_sheet.get_all_records()
        print(f"[REPORT] –ò–∑–≤–ª–∏—á–∞–Ω–µ –Ω–∞ –∑–∞–ø–∏—Å–∏ –∑–∞ {user} –∑–∞–≤—ä—Ä—à–∏ –∑–∞ {time.time() - start_time:.2f} —Å–µ–∫—É–Ω–¥–∏")
        user_records = [row for row in records if row.get("–ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª") == user]
        if not user_records:
            await interaction.followup.send("‚ùå –ù—è–º–∞ –∑–∞–ø–∏—Å–∞–Ω–æ —Ä–∞–±–æ—Ç–Ω–æ –≤—Ä–µ–º–µ!", ephemeral=False)
            print(f"[REPORT] –ù—è–º–∞ –∑–∞–ø–∏—Å–∏ –∑–∞ {user}, –∑–∞–≤—ä—Ä—à–∏ –∑–∞ {time.time() - start_time:.2f} —Å–µ–∫—É–Ω–¥–∏")
            return
        report_text = f"üìã **–û—Ç—á–µ—Ç –∑–∞ —Ä–∞–±–æ—Ç–Ω–æ—Ç–æ –≤—Ä–µ–º–µ –Ω–∞ {user}:**\n"
        for row in user_records:
            start = row.get("–ù–∞—á–∞–ª–æ", "‚ùì")
            end = row.get("–ö—Ä–∞–π", "‚ùì")
            worked_time = row.get("–ò–∑—Ä–∞–±–æ—Ç–µ–Ω–æ –≤—Ä–µ–º–µ", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
            report_text += f"üìÖ {start} ‚ûù {end} ‚è≥ {worked_time}\n"
        await interaction.followup.send(report_text, ephemeral=False)
        print(f"[REPORT] –£—Å–ø–µ—à–Ω–æ –≥–µ–Ω–µ—Ä–∏—Ä–∞–Ω–µ –Ω–∞ –æ—Ç—á–µ—Ç –∑–∞ {user}, –∑–∞–≤—ä—Ä—à–∏ –∑–∞ {time.time() - start_time:.2f} —Å–µ–∫—É–Ω–¥–∏")
    except Exception as e:
        print(f"[REPORT] –ì—Ä–µ—à–∫–∞ –≤ /report: {e}")
        await interaction.followup.send("‚ùå –í—ä–∑–Ω–∏–∫–Ω–∞ –≥—Ä–µ—à–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∏—Ä–∞–Ω–µ –Ω–∞ –æ—Ç—á–µ—Ç–∞!", ephemeral=False)

# üìå –ö–æ–º–∞–Ω–¥–∞ –∑–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∏
@bot.tree.command(name="documents", description="–ü–æ–∫–∞–∑–≤–∞ –≤–∞–∂–Ω–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∏ –∑–∞ –ø–æ–ª–∏—Ü–∏—è—Ç–∞")
async def documents(interaction: discord.Interaction):
    doc_links = (
        "**üìú –í–∞–∂–Ω–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∏ –Ω–∞ LSPD:**\n\n"
        "üìñ **–ù–∞–∫–∞–∑–∞—Ç–µ–ª–µ–Ω –∫–æ–¥–µ–∫—Å (Penal Code):**\n"
        "üîó [–õ–∏–Ω–∫ –∫—ä–º –¥–æ–∫—É–º–µ–Ω—Ç–∞](https://docs.google.com/spreadsheets/d/1vyCQWnxKUPKknOsIpiXqU_-qC8vpLaHdDQIQu22hz2s/edit?gid=0#gid=0)\n\n"
        "üìï **LSPD Handbook (–†—ä–∫–æ–≤–æ–¥—Å—Ç–≤–æ):**\n"
        "üîó [–õ–∏–Ω–∫ –∫—ä–º –¥–æ–∫—É–º–µ–Ω—Ç–∞](https://docs.google.com/document/d/1eEsR6jwpk0Y38Yw7vr22BlB1w9HiI3qtib-uy_YkWck/edit?tab=t.aho3f2r2d6uw)\n"
    )

    await interaction.response.send_message(doc_links, ephemeral=False)

# üî• –°—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ –Ω–∞ –±–æ—Ç–∞
@bot.event
async def on_ready():
    try:
        synced = await bot.tree.sync()
        print(f"‚úÖ –ë–æ—Ç—ä—Ç –µ –æ–Ω–ª–∞–π–Ω! –õ–æ–≥–Ω–∞—Ç –∫–∞—Ç–æ {bot.user}")
        print(f"‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–∞–Ω–∏ –∫–æ–º–∞–Ω–¥–∏: {[cmd.name for cmd in synced]}")
    except Exception as e:
        print(f"‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è: {e}")

bot.run(TOKEN)  # –ò–∑–ø–æ–ª–∑–≤–∞–º–µ –∑–∞—Ä–µ–¥–µ–Ω–∏—è TOKEN –æ—Ç .env