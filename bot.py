import os
import discord
from discord.ext import commands
import gspread
from oauth2client.service_account import ServiceAccountCredentials
from datetime import datetime, timedelta
import time
import pytz
import json

sofia_tz = pytz.timezone("Europe/Sofia")

# ‚úÖ –¢–æ–∫–µ–Ω –æ—Ç Railway Variables
TOKEN = os.getenv("DISCORD_TOKEN")
if not TOKEN:
    print("‚ùå –ì—Ä–µ—à–∫–∞: DISCORD_TOKEN –Ω–µ –µ –Ω–∞–º–µ—Ä–µ–Ω!")
    exit(1)

# Intents
intents = discord.Intents.default()
intents.members = True
intents.message_content = True
bot = commands.Bot(command_prefix="/", intents=intents)

# Google Sheets
SHEET_NAME = "LSPD BOT"
scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]

credentials_content = os.getenv("CREDENTIALS_JSON")
if not credentials_content:
    print("‚ùå –ì—Ä–µ—à–∫–∞: CREDENTIALS_JSON –Ω–µ –µ –∑–∞–¥–∞–¥–µ–Ω!")
    exit(1)

creds_dict = json.loads(credentials_content)
creds = ServiceAccountCredentials.from_json_keyfile_dict(creds_dict, scope)
client = gspread.authorize(creds)

def ensure_shifts_headers(sh):
    """
    A: –ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª (username ‚Äì —Å—Ç–∞–±–∏–ª–µ–Ω)
    B: –ù–∞—á–∞–ª–æ
    C: –ö—Ä–∞–π
    D: –ò–∑—Ä–∞–±–æ—Ç–µ–Ω–æ –≤—Ä–µ–º–µ
    E: –ü—Å–µ–≤–¥–æ–Ω–∏–º (nickname ‚Äì –≤–∏–∑—É–∞–ª–Ω–æ)
    """
    values = sh.get_all_values()
    wanted = ["–ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª", "–ù–∞—á–∞–ª–æ", "–ö—Ä–∞–π", "–ò–∑—Ä–∞–±–æ—Ç–µ–Ω–æ –≤—Ä–µ–º–µ", "–ü—Å–µ–≤–¥–æ–Ω–∏–º"]
    if not values:
        sh.append_row(wanted)
        return
    headers = values[0]
    # –ü–æ–¥—Ä–∞–≤–Ω—è–≤–∞–º–µ –∑–∞–≥–ª–∞–≤–∫–∏—Ç–µ –¥–æ A:E
    if headers[:len(wanted)] != wanted:
        sh.update("A1:E1", [wanted])
    # –∞–∫–æ –Ω—è–º–∞ –∫–æ–ª–æ–Ω–∞ –ï, —Å—ä–∑–¥–∞–≤–∞–º–µ –ø—Ä–∞–∑–Ω–∏ —Å—Ç–æ–π–Ω–æ—Å—Ç–∏
    if len(headers) < 5 and len(values) > 1:
        sh.update(f"E2:E{len(values)}", [[""] for _ in range(len(values)-1)])

def get_identity(interaction: discord.Interaction):
    """
    –í—Ä—ä—â–∞: username, nickname, display
    - username: —Å—Ç–∞–±–∏–ª–µ–Ω –∫–ª—é—á (interaction.user.name)
    - nickname: —Ç–µ–∫—É—â –Ω–∏–∫ –≤ —Å—ä—Ä–≤—ä—Ä–∞ (–∏–ª–∏ "")
    - display: "username (nickname)" –∏–ª–∏ —Å–∞–º–æ username
    """
    username = interaction.user.name
    nickname = ""
    if interaction.guild:
        member = interaction.guild.get_member(interaction.user.id)
        if member and member.nick:
            nickname = member.nick
    display = f"{username} ({nickname})" if nickname else username
    return username, nickname, display

try:
    shifts_sheet = client.open(SHEET_NAME).worksheet("Shifts")
    leaves_sheet = client.open(SHEET_NAME).worksheet("Leaves")
    ensure_shifts_headers(shifts_sheet)
    if not leaves_sheet.get_all_values():
        leaves_sheet.append_row(["–ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª", "–ù–∞—á–∞–ª–æ –Ω–∞ –æ—Ç–ø—É—Å–∫–∞", "–ö—Ä–∞–π –Ω–∞ –æ—Ç–ø—É—Å–∫–∞", "–û–±—â–æ –¥–Ω–∏", "–ü—Ä–∏—á–∏–Ω–∞"])
    print("‚úÖ Google Sheets —Å–≤—ä—Ä–∑–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
except Exception as e:
    print(f"‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –≤—Ä—ä–∑–∫–∞—Ç–∞ —Å Google Sheets: {e}")
    exit(1)

# -------------------- –ö–æ–º–∞–Ω–¥–∏ --------------------

@bot.tree.command(name="startshift", description="–ó–∞–ø–æ—á–≤–∞ —Å–º—è–Ω–∞—Ç–∞ –∏ –∑–∞–ø–∏—Å–≤–∞ –≤—Ä–µ–º–µ—Ç–æ –Ω–∞ –≤–ª–∏–∑–∞–Ω–µ")
async def startshift(interaction: discord.Interaction):
    try:
        await interaction.response.defer(ephemeral=False)
    except Exception as e:
        print(f"[STARTSHIFT] defer error: {e}")
        return

    t0 = time.time()
    username, nickname, display = get_identity(interaction)
    start_shift_time = datetime.now(sofia_tz).strftime("%Y-%m-%d %H:%M:%S")
    print(f"[STARTSHIFT] user={username} nick='{nickname}' at {start_shift_time}")

    try:
        records = shifts_sheet.get_all_records()
        # –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞ –∞–∫—Ç–∏–≤–Ω–∞ —Å–º—è–Ω–∞ –ø–æ username
        for row in records:
            if row.get("–ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª") == username and (row.get("–ö—Ä–∞–π") in ("", None)):
                await interaction.followup.send("‚ùå –í–µ—á–µ –∏–º–∞—à –∞–∫—Ç–∏–≤–Ω–∞ —Å–º—è–Ω–∞!", ephemeral=False)
                return

        # A=username, B=start, C="", D="", E=nickname
        shifts_sheet.append_row([username, start_shift_time, "", "", nickname])
        await interaction.followup.send(f"‚úÖ {display} –∑–∞–ø–æ—á–Ω–∞ —Å–º—è–Ω–∞—Ç–∞ –≤ {start_shift_time}", ephemeral=False)
        print(f"[STARTSHIFT] OK in {time.time()-t0:.2f}s")
    except Exception as e:
        print(f"[STARTSHIFT] Unexpected: {e}")
        await interaction.followup.send("‚ùå –í—ä–∑–Ω–∏–∫–Ω–∞ –≥—Ä–µ—à–∫–∞ –ø—Ä–∏ –∑–∞–ø–æ—á–≤–∞–Ω–µ –Ω–∞ —Å–º—è–Ω–∞—Ç–∞!", ephemeral=False)

@bot.tree.command(name="endshift", description="–ü—Ä–∏–∫–ª—é—á–≤–∞ —Å–º—è–Ω–∞—Ç–∞ –∏ –∑–∞–ø–∏—Å–≤–∞ –≤—Ä–µ–º–µ—Ç–æ –Ω–∞ –∏–∑–ª–∏–∑–∞–Ω–µ")
async def endshift(interaction: discord.Interaction):
    try:
        await interaction.response.defer(ephemeral=False)
    except Exception as e:
        print(f"[ENDSHIFT] defer error: {e}")
        return

    t0 = time.time()
    username, nickname, display = get_identity(interaction)
    end_time = datetime.now(sofia_tz).strftime("%Y-%m-%d %H:%M:%S")
    print(f"[ENDSHIFT] user={username} nick='{nickname}' at {end_time}")

    try:
        records = shifts_sheet.get_all_records()
        target_i = None
        start_time_str = None

        for i, row in enumerate(records, start=2):  # —Ä–µ–¥ 1 = –∑–∞–≥–ª–∞–≤–∫–∏
            if row.get("–ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª") == username and (row.get("–ö—Ä–∞–π") in ("", None)):
                target_i = i
                start_time_str = row.get("–ù–∞—á–∞–ª–æ")
                break

        if not target_i:
            await interaction.followup.send("‚ùå –ù—è–º–∞ –∑–∞–ø–æ—á–Ω–∞—Ç–∞ —Å–º—è–Ω–∞ –∑–∞ –ø—Ä–∏–∫–ª—é—á–≤–∞–Ω–µ!", ephemeral=False)
            print(f"[ENDSHIFT] no active shift for {username}")
            return

        start_dt = datetime.strptime(start_time_str, "%Y-%m-%d %H:%M:%S")
        end_dt = datetime.strptime(end_time, "%Y-%m-%d %H:%M:%S")
        worked = end_dt - start_dt
        h, rem = divmod(worked.total_seconds(), 3600)
        m = int(rem // 60)
        worked_str = f"{int(h)}—á {m}–º–∏–Ω"

        # –û–±–Ω–æ–≤—è–≤–∞–º–µ –∫—Ä–∞–π –∏ –∏–∑—Ä–∞–±–æ—Ç–µ–Ω–æ –≤—Ä–µ–º–µ
        shifts_sheet.update(f"C{target_i}", [[end_time]])
        shifts_sheet.update(f"D{target_i}", [[worked_str]])

        # –ê–∫–æ –Ω–∏–∫—ä—Ç –µ —Å–º–µ–Ω–µ–Ω ‚Äì –æ–±–Ω–æ–≤–∏ –ï
        current_nick = records[target_i-2].get("–ü—Å–µ–≤–¥–æ–Ω–∏–º") or ""
        if current_nick != nickname:
            shifts_sheet.update(f"E{target_i}", [[nickname]])

        await interaction.followup.send(
            f"‚úÖ {display} –ø—Ä–∏–∫–ª—é—á–∏ —Å–º—è–Ω–∞—Ç–∞ –≤ {end_time} (‚è≥ {worked_str})\n\n"
            "üíº **–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –≤–∏ –∑–∞ –¥–Ω–µ—à–Ω–∞—Ç–∞ –≤–∏ —Å–ª—É–∂–±–∞!**\n"
            "–ê–∫–æ –∏–º–∞—Ç–µ –ø—Ä–æ–±–ª–µ–º –∏–ª–∏ –Ω–µ—Ä–∞–∑–±–∏—Ä–∞—Ç–µ–ª—Å—Ç–≤–æ, –º–æ–ª—è —Å–≤—ä—Ä–∂–µ—Ç–µ —Å–µ —Å —Ä—ä–∫–æ–≤–æ–¥—Å—Ç–≤–æ—Ç–æ –Ω–∞ LSPD.",
            ephemeral=False
        )
        print(f"[ENDSHIFT] OK in {time.time()-t0:.2f}s")

    except Exception as e:
        print(f"[ENDSHIFT] Unexpected: {e}")
        try:
            await interaction.followup.send("‚ùå –í—ä–∑–Ω–∏–∫–Ω–∞ –≥—Ä–µ—à–∫–∞ –ø—Ä–∏ –ø—Ä–∏–∫–ª—é—á–≤–∞–Ω–µ –Ω–∞ —Å–º—è–Ω–∞—Ç–∞!", ephemeral=False)
        except Exception as fe:
            print(f"[ENDSHIFT] followup error: {fe}")

@bot.tree.command(name="leave", description="–ó–∞—è–≤–∫–∞ –∑–∞ –æ—Ç–ø—É—Å–∫ –∑–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω –ø–µ—Ä–∏–æ–¥ —Å –ø—Ä–∏—á–∏–Ω–∞")
async def leave(interaction: discord.Interaction, start_date: str, end_date: str, reason: str):
    try:
        await interaction.response.defer(ephemeral=False)
    except Exception as e:
        print(f"[LEAVE] defer error: {e}")
        return

    t0 = time.time()
    username, nickname, display = get_identity(interaction)
    print(f"[LEAVE] {display}")

    try:
        start_dt = datetime.strptime(start_date, "%d.%m.%Y")
        end_dt = datetime.strptime(end_date, "%d.%m.%Y")
        total_days = (end_dt - start_dt).days + 1

        if total_days < 1:
            await interaction.followup.send("‚ùå –ö—Ä–∞–π–Ω–∞—Ç–∞ –¥–∞—Ç–∞ —Ç—Ä—è–±–≤–∞ –¥–∞ –µ —Å–ª–µ–¥ –Ω–∞—á–∞–ª–Ω–∞—Ç–∞!", ephemeral=False)
            return

        current_date = datetime.now(sofia_tz).replace(hour=0, minute=0, second=0, microsecond=0)
        min_allowed_date = current_date - timedelta(days=1)
        if start_dt < min_allowed_date:
            await interaction.followup.send(
                f"‚ùå –ù–µ –º–æ–∂–µ—à –¥–∞ –∑–∞—è–≤–∏—à –æ—Ç–ø—É—Å–∫, –∑–∞–ø–æ—á–≤–∞—â –ø—Ä–µ–¥–∏ {min_allowed_date.strftime('%d.%m.%Y')}! "
                "–ú–∞–∫—Å–∏–º—É–º 1 –¥–µ–Ω –Ω–∞–∑–∞–¥ –µ –ø–æ–∑–≤–æ–ª–µ–Ω.",
                ephemeral=False
            )
            return

        if not reason or reason.strip() == "":
            await interaction.followup.send("‚ùå –ú–æ–ª—è, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏ –ø—Ä–∏—á–∏–Ω–∞ –∑–∞ –æ—Ç–ø—É—Å–∫–∞!", ephemeral=False)
            return

        leaves_sheet.append_row([
            display,  # –ø–æ–∫–∞–∑–≤–∞–º–µ username (nickname) –∑–∞ —è—Å–Ω–æ—Ç–∞
            start_dt.strftime("%Y-%m-%d"),
            end_dt.strftime("%Y-%m-%d"),
            total_days,
            reason
        ])

        await interaction.followup.send(
            f"‚úÖ {display} –∑–∞—è–≤–∏ –æ—Ç–ø—É—Å–∫ –æ—Ç {start_date} –¥–æ {end_date} ({total_days} –¥–Ω–∏)\n"
            f"üìù **–ü—Ä–∏—á–∏–Ω–∞:** {reason}",
            ephemeral=False
        )
        print(f"[LEAVE] OK in {time.time()-t0:.2f}s")

    except ValueError:
        await interaction.followup.send(
            "‚ùå –ì—Ä–µ—à–µ–Ω —Ñ–æ—Ä–º–∞—Ç –Ω–∞ –¥–∞—Ç–∏—Ç–µ! –ò–∑–ø–æ–ª–∑–≤–∞–π **–î–î.–ú–ú.–ì–ì–ì–ì** (–ø—Ä–∏–º–µ—Ä: 13.03.2025)",
            ephemeral=False
        )
    except Exception as e:
        print(f"[LEAVE] Unexpected: {e}")
        await interaction.followup.send("‚ùå –í—ä–∑–Ω–∏–∫–Ω–∞ –≥—Ä–µ—à–∫–∞ –ø—Ä–∏ –∑–∞—è–≤—è–≤–∞–Ω–µ –Ω–∞ –æ—Ç–ø—É—Å–∫!", ephemeral=False)

@bot.tree.command(name="report", description="–ì–µ–Ω–µ—Ä–∏—Ä–∞ –æ—Ç—á–µ—Ç –∑–∞ —Ä–∞–±–æ—Ç–Ω–æ—Ç–æ –≤—Ä–µ–º–µ")
async def report(interaction: discord.Interaction):
    try:
        await interaction.response.defer(ephemeral=False)
    except Exception as e:
        print(f"[REPORT] defer error: {e}")
        return

    t0 = time.time()
    username, nickname, display = get_identity(interaction)
    print(f"[REPORT] {display}")

    try:
        records = shifts_sheet.get_all_records()
        user_records = [row for row in records if row.get("–ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª") == username]
        if not user_records:
            await interaction.followup.send("‚ùå –ù—è–º–∞ –∑–∞–ø–∏—Å–∞–Ω–æ —Ä–∞–±–æ—Ç–Ω–æ –≤—Ä–µ–º–µ!", ephemeral=False)
            return

        report_text = f"üìã **–û—Ç—á–µ—Ç –∑–∞ {display}:**\n"
        for row in user_records:
            start = row.get("–ù–∞—á–∞–ª–æ", "‚ùì")
            end = row.get("–ö—Ä–∞–π", "‚ùì")
            worked_time = row.get("–ò–∑—Ä–∞–±–æ—Ç–µ–Ω–æ –≤—Ä–µ–º–µ", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
            shown = f"{row.get('–ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª')} ({row.get('–ü—Å–µ–≤–¥–æ–Ω–∏–º')})" if row.get("–ü—Å–µ–≤–¥–æ–Ω–∏–º") else row.get("–ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª")
            report_text += f"üë§ {shown} | üìÖ {start} ‚ûù {end} ‚è≥ {worked_time}\n"

        await interaction.followup.send(report_text, ephemeral=False)
        print(f"[REPORT] OK in {time.time()-t0:.2f}s")
    except Exception as e:
        print(f"[REPORT] Unexpected: {e}")
        await interaction.followup.send("‚ùå –í—ä–∑–Ω–∏–∫–Ω–∞ –≥—Ä–µ—à–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∏—Ä–∞–Ω–µ –Ω–∞ –æ—Ç—á–µ—Ç–∞!", ephemeral=False)

@bot.tree.command(name="documents", description="–ü–æ–∫–∞–∑–≤–∞ –≤–∞–∂–Ω–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∏ –∑–∞ –ø–æ–ª–∏—Ü–∏—è—Ç–∞")
async def documents(interaction: discord.Interaction):
    doc_links = (
        "**üìú –í–∞–∂–Ω–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∏ –Ω–∞ LSPD:**\n\n"
        "üìñ **–ù–∞–∫–∞–∑–∞—Ç–µ–ª–µ–Ω –∫–æ–¥–µ–∫—Å (Penal Code):**\n"
        "üîó https://docs.google.com/spreadsheets/d/1vyCQWnxKUPKknOsIpiXqU_-qC8vpLaHdDQIQu22hz2s/edit?gid=0#gid=0\n\n"
        "üìï **LSPD Handbook (–†—ä–∫–æ–≤–æ–¥—Å—Ç–≤–æ):**\n"
        "üîó https://docs.google.com/document/d/1eEsR6jwpk0Y38Yw7vr22BlB1w9HiI3qtib-uy_YkWck/edit?tab=t.aho3f2r2d6uw\n"
    )
    await interaction.response.send_message(doc_links, ephemeral=False)

@bot.event
async def on_ready():
    try:
        synced = await bot.tree.sync()
        print(f"‚úÖ –ë–æ—Ç—ä—Ç –µ –æ–Ω–ª–∞–π–Ω! –õ–æ–≥–Ω–∞—Ç –∫–∞—Ç–æ {bot.user}")
        print(f"‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–∞–Ω–∏ –∫–æ–º–∞–Ω–¥–∏: {[cmd.name for cmd in synced]}")
    except Exception as e:
        print(f"‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è: {e}")

bot.run(TOKEN)
