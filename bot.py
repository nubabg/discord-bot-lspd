import os
import discord
from discord.ext import commands
import gspread
from oauth2client.service_account import ServiceAccountCredentials
from datetime import datetime, timedelta
import time
import pytz
import json

# –ù–∞—Å—Ç—Ä–æ–π–≤–∞–Ω–µ –Ω–∞ —á–∞—Å–æ–≤–∞—Ç–∞ –∑–æ–Ω–∞ –∑–∞ –°–æ—Ñ–∏—è
sofia_tz = pytz.timezone("Europe/Sofia")

# –í–∑–∏–º–∞–Ω–µ –Ω–∞ —Ç–æ–∫–µ–Ω–∞ –æ—Ç —Å—Ä–µ–¥–∞—Ç–∞
TOKEN = os.getenv("DISCORD_TOKEN")
if not TOKEN:
    print("‚ùå –ì—Ä–µ—à–∫–∞: DISCORD_TOKEN –Ω–µ –µ –Ω–∞–º–µ—Ä–µ–Ω!")
    exit(1)

# –°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ intents
intents = discord.Intents.default()
intents.members = True
intents.message_content = True

bot = commands.Bot(command_prefix="/", intents=intents)

# --- –í—Ä—ä–∑–∫–∞ —Å Google Sheets ---
SHEET_NAME = "LSPD BOT"
scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]

credentials_content = os.getenv("CREDENTIALS_JSON")
if not credentials_content:
    print("‚ùå –ì—Ä–µ—à–∫–∞: CREDENTIALS_JSON –Ω–µ –µ –∑–∞–¥–∞–¥–µ–Ω!")
    exit(1)

try:
    creds_dict = json.loads(credentials_content)
    creds = ServiceAccountCredentials.from_json_keyfile_dict(creds_dict, scope)
    client = gspread.authorize(creds)

    shifts_sheet = client.open(SHEET_NAME).worksheet("Shifts")
    leaves_sheet = client.open(SHEET_NAME).worksheet("Leaves")
    print("‚úÖ Google Sheets —Å–≤—ä—Ä–∑–∞–Ω —É—Å–ø–µ—à–Ω–æ!")

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —Å—ä–∑–¥–∞–≤–∞–Ω–µ/–∫–æ—Ä–µ–∫—Ü–∏—è –Ω–∞ —Ö–µ–¥—ä—Ä–∏
    if not shifts_sheet.get_all_values():
        shifts_sheet.append_row(["–ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª", "–ù–∞—á–∞–ª–æ", "–ö—Ä–∞–π", "–ò–∑—Ä–∞–±–æ—Ç–µ–Ω–æ –≤—Ä–µ–º–µ", "Discord ID"])
    else:
        headers = shifts_sheet.row_values(1)
        # –£–≤–µ—Ä—è–≤–∞–º–µ —Å–µ, —á–µ –∏–º–∞–º–µ 5-—Ç–∞ –∫–æ–ª–æ–Ω–∞ –∑–∞ ID
        if len(headers) < 5 or headers[4] != "Discord ID":
            new_headers = ["–ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª", "–ù–∞—á–∞–ª–æ", "–ö—Ä–∞–π", "–ò–∑—Ä–∞–±–æ—Ç–µ–Ω–æ –≤—Ä–µ–º–µ", "Discord ID"]
            shifts_sheet.update("A1:E1", [new_headers])

    if not leaves_sheet.get_all_values():
        leaves_sheet.append_row(["–ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª", "–ù–∞—á–∞–ª–æ –Ω–∞ –æ—Ç–ø—É—Å–∫–∞", "–ö—Ä–∞–π –Ω–∞ –æ—Ç–ø—É—Å–∫–∞", "–û–±—â–æ –¥–Ω–∏", "–ü—Ä–∏—á–∏–Ω–∞"])
except Exception as e:
    print(f"‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –≤—Ä—ä–∑–∫–∞—Ç–∞ —Å Google Sheets: {e}")
    exit(1)

# --- –ü–æ–º–æ—â–Ω–∏ —Ñ—É–Ω–∫—Ü–∏–∏ ---
def get_username_and_nick(interaction):
    """–í—Ä—ä—â–∞ ('DiscordUsername (Nickname)', user_id) –∑–∞ –∑–∞–ø–∏—Å –≤ Row A + —Å—Ç–∞–±–∏–ª–Ω–æ ID –∑–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏."""
    user = interaction.user
    username = user.name  # Discord username
    if interaction.guild:
        member = interaction.guild.get_member(user.id)
        nickname = member.nick if member and member.nick else user.name
    else:
        nickname = user.name

    # –§–æ—Ä–º–∞—Ç Row A: Username (Nickname)
    if nickname.strip().lower() == username.strip().lower():
        display = username
    else:
        display = f"{username} ({nickname})"

    return display, str(user.id)


def _find_open_shift_row_by_id(user_id: str):
    """–í—Ä—ä—â–∞ –Ω–æ–º–µ—Ä –Ω–∞ —Ä–µ–¥ –∑–∞ –æ—Ç–≤–æ—Ä–µ–Ω–∞ —Å–º—è–Ω–∞ –ø–æ ID (–∫–æ–ª–æ–Ω–∞ E), –∏–ª–∏ None."""
    try:
        cells = shifts_sheet.findall(user_id, in_column=5)
        for cell in reversed(cells):  # –ø–æ—Å–ª–µ–¥–Ω–∏—è—Ç –µ –Ω–∞–π-–Ω–æ–≤
            end_val = shifts_sheet.cell(cell.row, 3).value  # C = '–ö—Ä–∞–π'
            if not end_val:
                return cell.row
    except Exception:
        pass
    return None


def _find_open_shift_row_by_display(display: str):
    """Fallback: –Ω–∞–º–∏—Ä–∞ –æ—Ç–≤–æ—Ä–µ–Ω–∞ —Å–º—è–Ω–∞ –ø–æ —Ç–µ–∫—Å—Ç–∞ –≤ –∫–æ–ª–æ–Ω–∞ A (Username (Nickname))."""
    try:
        cells = shifts_sheet.findall(display, in_column=1)
        for cell in reversed(cells):
            end_val = shifts_sheet.cell(cell.row, 3).value
            if not end_val:
                return cell.row
    except Exception:
        pass
    return None

# --- –ö–æ–º–∞–Ω–¥–∏ –Ω–∞ –±–æ—Ç–∞ ---

# üìå –ö–æ–º–∞–Ω–¥–∞ –∑–∞ –∑–∞–ø–æ—á–≤–∞–Ω–µ –Ω–∞ —Å–º—è–Ω–∞
@bot.tree.command(name="startshift", description="–ó–∞–ø–æ—á–≤–∞ —Å–º—è–Ω–∞—Ç–∞ –∏ –∑–∞–ø–∏—Å–≤–∞ –≤—Ä–µ–º–µ—Ç–æ –Ω–∞ –≤–ª–∏–∑–∞–Ω–µ")
async def startshift(interaction: discord.Interaction):
    await interaction.response.defer(ephemeral=False)

    display, user_id = get_username_and_nick(interaction)
    start_shift_time = datetime.now(sofia_tz).strftime("%Y-%m-%d %H:%M:%S")
    print(f"[STARTSHIFT] –ù–∞—á–∞–ª–æ –∑–∞ {display} (ID: {user_id})")

    try:
        # 1) –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ ID (–∫–æ–ª–æ–Ω–∞ E)
        row = _find_open_shift_row_by_id(user_id)
        # 2) Fallback: –∞–∫–æ –Ω—è–º–∞ –ø–æ ID, –Ω–æ –∏–º–∞ —Å—Ç–∞—Ä –∑–∞–ø–∏—Å –ø–æ display (–∫–æ–ª–æ–Ω–∞ A)
        if row is None:
            row = _find_open_shift_row_by_display(display)

        if row is not None:
            await interaction.followup.send("‚ùå –í–µ—á–µ –∏–º–∞—à –∞–∫—Ç–∏–≤–Ω–∞ —Å–º—è–Ω–∞!", ephemeral=False)
            print(f"[STARTSHIFT] –û—Ç–∫—Ä–∏—Ç–∞ –∞–∫—Ç–∏–≤–Ω–∞ —Å–º—è–Ω–∞ (—Ä–µ–¥ {row}) –∑–∞ {display}")
            return

        # –ó–∞–ø–∏—Å: A=display, B=start, C=end, D=worked, E=user_id
        shifts_sheet.append_row([display, start_shift_time, "", "", user_id])
        await interaction.followup.send(f"‚úÖ {display} –∑–∞–ø–æ—á–Ω–∞ —Å–º—è–Ω–∞—Ç–∞ –≤ {start_shift_time}", ephemeral=False)
        print(f"[STARTSHIFT] –ó–∞–ø–∏—Å–∞–Ω –Ω–æ–≤ —Ä–µ–¥ –∑–∞ {display}")

    except Exception as e:
        print(f"[STARTSHIFT] –ù–µ–æ–±—Ä–∞–±–æ—Ç–µ–Ω–∞ –≥—Ä–µ—à–∫–∞: {e}")
        await interaction.followup.send("‚ùå –í—ä–∑–Ω–∏–∫–Ω–∞ –≥—Ä–µ—à–∫–∞ –ø—Ä–∏ –∑–∞–ø–æ—á–≤–∞–Ω–µ –Ω–∞ —Å–º—è–Ω–∞—Ç–∞!", ephemeral=False)


# üìå –ö–æ–º–∞–Ω–¥–∞ –∑–∞ –ø—Ä–∏–∫–ª—é—á–≤–∞–Ω–µ –Ω–∞ —Å–º—è–Ω–∞
@bot.tree.command(name="endshift", description="–ü—Ä–∏–∫–ª—é—á–≤–∞ —Å–º—è–Ω–∞—Ç–∞ –∏ –∑–∞–ø–∏—Å–≤–∞ –≤—Ä–µ–º–µ—Ç–æ –Ω–∞ –∏–∑–ª–∏–∑–∞–Ω–µ")
async def endshift(interaction: discord.Interaction):
    await interaction.response.defer(ephemeral=False)

    display, user_id = get_username_and_nick(interaction)
    end_time_str = datetime.now(sofia_tz).strftime("%Y-%m-%d %H:%M:%S")
    print(f"[ENDSHIFT] –ù–∞—á–∞–ª–æ –∑–∞ {display} (ID: {user_id})")

    try:
        # 1) –¢—ä—Ä—Å–∏–º –ø–æ—Å–ª–µ–¥–Ω–∞—Ç–∞ –æ—Ç–≤–æ—Ä–µ–Ω–∞ —Å–º—è–Ω–∞ –ø–æ ID (–∫–æ–ª–æ–Ω–∞ E)
        row = _find_open_shift_row_by_id(user_id)
        # 2) Fallback: –∞–∫–æ –Ω—è–º–∞ ID (—Å—Ç–∞—Ä–∏ –∑–∞–ø–∏—Å–∏), —Ç—ä—Ä—Å–∏–º –ø–æ –∫–æ–ª–æ–Ω–∞ A (display)
        if row is None:
            row = _find_open_shift_row_by_display(display)

        if row is None:
            await interaction.followup.send("‚ùå –ù—è–º–∞ –∑–∞–ø–æ—á–Ω–∞—Ç–∞ —Å–º—è–Ω–∞ –∑–∞ –ø—Ä–∏–∫–ª—é—á–≤–∞–Ω–µ!", ephemeral=False)
            print(f"[ENDSHIFT] –ù—è–º–∞ –∞–∫—Ç–∏–≤–Ω–∞ —Å–º—è–Ω–∞ –∑–∞ {display}")
            return

        # –ß–µ—Ç–µ–º —Å—Ç–∞—Ä—Ç
        start_time_str = shifts_sheet.cell(row, 2).value  # B = '–ù–∞—á–∞–ª–æ'
        if not start_time_str:
            start_time_str = end_time_str

        start_dt = datetime.strptime(start_time_str, "%Y-%m-%d %H:%M:%S")
        end_dt = datetime.strptime(end_time_str, "%Y-%m-%d %H:%M:%S")
        worked = end_dt - start_dt
        hours, rem = divmod(worked.total_seconds(), 3600)
        minutes = int(rem // 60)
        worked_str = f"{int(hours)}—á {minutes}–º–∏–Ω"

        # –û–±–Ω–æ–≤—è–≤–∞–Ω–µ –Ω–∞ —Ä–µ–¥ A..E (–¥–æ–ø–∏—Å–≤–∞–º–µ –∏ ID, –∞–∫–æ –µ –ª–∏–ø—Å–≤–∞–ª)
        shifts_sheet.update(f"A{row}:E{row}", [[display, start_time_str, end_time_str, worked_str, user_id]])

        await interaction.followup.send(
            f"‚úÖ {display} –ø—Ä–∏–∫–ª—é—á–∏ —Å–º—è–Ω–∞—Ç–∞ –≤ {end_time_str} (‚è≥ {worked_str})",
            ephemeral=False
        )
        print(f"[ENDSHIFT] –£—Å–ø–µ—à–Ω–æ –ø—Ä–∏–∫–ª—é—á–≤–∞–Ω–µ –∑–∞ —Ä–µ–¥ {row}")

    except Exception as e:
        print(f"[ENDSHIFT] –ù–µ–æ–±—Ä–∞–±–æ—Ç–µ–Ω–∞ –≥—Ä–µ—à–∫–∞: {e}")
        await interaction.followup.send("‚ùå –í—ä–∑–Ω–∏–∫–Ω–∞ –≥—Ä–µ—à–∫–∞ –ø—Ä–∏ –ø—Ä–∏–∫–ª—é—á–≤–∞–Ω–µ –Ω–∞ —Å–º—è–Ω–∞—Ç–∞!", ephemeral=False)


# üìå –ö–æ–º–∞–Ω–¥–∞ –∑–∞ –∑–∞—è–≤–∫–∞ –∑–∞ –æ—Ç–ø—É—Å–∫
@bot.tree.command(name="leave", description="–ó–∞—è–≤–∫–∞ –∑–∞ –æ—Ç–ø—É—Å–∫ –∑–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω –ø–µ—Ä–∏–æ–¥ —Å –ø—Ä–∏—á–∏–Ω–∞")
async def leave(interaction: discord.Interaction, start_date: str, end_date: str, reason: str):
    await interaction.response.defer(ephemeral=False)

    display, _ = get_username_and_nick(interaction)
    print(f"[LEAVE] –ù–∞—á–∞–ª–æ –∑–∞ {display}")

    try:
        start_dt = datetime.strptime(start_date, "%d.%m.%Y")
        end_dt = datetime.strptime(end_date, "%d.%m.%Y")
        total_days = (end_dt - start_dt).days + 1

        if total_days < 1:
            await interaction.followup.send("‚ùå –ì—Ä–µ—à–∫–∞: –ö—Ä–∞–π–Ω–∞—Ç–∞ –¥–∞—Ç–∞ —Ç—Ä—è–±–≤–∞ –¥–∞ –µ —Å–ª–µ–¥ –Ω–∞—á–∞–ª–Ω–∞—Ç–∞!", ephemeral=False)
            return

        current_date = datetime.now(sofia_tz).replace(hour=0, minute=0, second=0, microsecond=0)
        min_allowed_date = current_date - timedelta(days=1)

        if start_dt < min_allowed_date:
            await interaction.followup.send(
                f"‚ùå –ù–µ –º–æ–∂–µ—à –¥–∞ –∑–∞—è–≤–∏—à –æ—Ç–ø—É—Å–∫, –∑–∞–ø–æ—á–≤–∞—â –ø—Ä–µ–¥–∏ {min_allowed_date.strftime('%d.%m.%Y')}! "
                "–ú–∞–∫—Å–∏–º—É–º 1 –¥–µ–Ω –Ω–∞–∑–∞–¥ –µ –ø–æ–∑–≤–æ–ª–µ–Ω.",
                ephemeral=False
            )
            return

        if not reason or reason.strip() == "":
            await interaction.followup.send("‚ùå –ú–æ–ª—è, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏ –ø—Ä–∏—á–∏–Ω–∞ –∑–∞ –æ—Ç–ø—É—Å–∫–∞!", ephemeral=False)
            return

        leaves_sheet.append_row([
            display,
            start_dt.strftime("%Y-%m-%d"),
            end_dt.strftime("%Y-%m-%d"),
            total_days,
            reason
        ])

        await interaction.followup.send(
            f"‚úÖ {display} –∑–∞—è–≤–∏ –æ—Ç–ø—É—Å–∫ –æ—Ç {start_date} –¥–æ {end_date} ({total_days} –¥–Ω–∏)\n"
            f"üìù **–ü—Ä–∏—á–∏–Ω–∞:** {reason}",
            ephemeral=False
        )
    except ValueError:
        await interaction.followup.send(
            "‚ùå –ì—Ä–µ—à–µ–Ω —Ñ–æ—Ä–º–∞—Ç –Ω–∞ –¥–∞—Ç–∏—Ç–µ! –ò–∑–ø–æ–ª–∑–≤–∞–π **–î–î.–ú–ú.–ì–ì–ì–ì** (–ø—Ä–∏–º–µ—Ä: 13.03.2025)",
            ephemeral=False
        )
    except Exception as e:
        print(f"[LEAVE] –ù–µ–æ–±—Ä–∞–±–æ—Ç–µ–Ω–∞ –≥—Ä–µ—à–∫–∞: {e}")
        await interaction.followup.send("‚ùå –í—ä–∑–Ω–∏–∫–Ω–∞ –≥—Ä–µ—à–∫–∞ –ø—Ä–∏ –∑–∞—è–≤—è–≤–∞–Ω–µ –Ω–∞ –æ—Ç–ø—É—Å–∫!", ephemeral=False)


# üìå –ö–æ–º–∞–Ω–¥–∞ –∑–∞ –≥–µ–Ω–µ—Ä–∏—Ä–∞–Ω–µ –Ω–∞ –æ—Ç—á–µ—Ç
@bot.tree.command(name="report", description="–ì–µ–Ω–µ—Ä–∏—Ä–∞ –æ—Ç—á–µ—Ç –∑–∞ —Ä–∞–±–æ—Ç–Ω–æ—Ç–æ –≤—Ä–µ–º–µ")
async def report(interaction: discord.Interaction):
    await interaction.response.defer(ephemeral=False)

    display, user_id = get_username_and_nick(interaction)
    print(f"[REPORT] –ù–∞—á–∞–ª–æ –∑–∞ {display} (ID: {user_id})")

    try:
        all_rows = shifts_sheet.get_all_values()
        # –§–∏–ª—Ç—ä—Ä –ø–æ ID (E –∫–æ–ª–æ–Ω–∞). –ê–∫–æ –Ω—è–º–∞ —Ç–∞–∫–∏–≤–∞, –ø–∞–¥–∞–º–µ –∫—ä–º display (A –∫–æ–ª–æ–Ω–∞).
        user_rows = [r for r in all_rows[1:] if len(r) >= 5 and r[4] == user_id]
        if not user_rows:
            user_rows = [r for r in all_rows[1:] if len(r) >= 1 and r[0] == display]

        if not user_rows:
            await interaction.followup.send("‚ùå –ù—è–º–∞ –∑–∞–ø–∏—Å–∞–Ω–æ —Ä–∞–±–æ—Ç–Ω–æ –≤—Ä–µ–º–µ!", ephemeral=False)
            return

        report_text = f"üìã **–û—Ç—á–µ—Ç –∑–∞ {display}:**\n"
        for r in user_rows[-15:]:
            start = r[1] if len(r) > 1 else "‚ùì"
            end = r[2] if len(r) > 2 else "‚ùì"
            worked_time = r[3] if len(r) > 3 else "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
            report_text += f"üìÖ {start} ‚ûù {end} ‚è≥ {worked_time}\n"

        await interaction.followup.send(report_text, ephemeral=False)
    except Exception as e:
        print(f"[REPORT] –ì—Ä–µ—à–∫–∞ –≤ /report: {e}")
        await interaction.followup.send("‚ùå –í—ä–∑–Ω–∏–∫–Ω–∞ –≥—Ä–µ—à–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∏—Ä–∞–Ω–µ –Ω–∞ –æ—Ç—á–µ—Ç–∞!", ephemeral=False)


# üìå –ö–æ–º–∞–Ω–¥–∞ –∑–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∏
@bot.tree.command(name="documents", description="–ü–æ–∫–∞–∑–≤–∞ –≤–∞–∂–Ω–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∏ –∑–∞ –ø–æ–ª–∏—Ü–∏—è—Ç–∞")
async def documents(interaction: discord.Interaction):
    doc_links = (
        "**üìú –í–∞–∂–Ω–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∏ –Ω–∞ LSPD:**\n\n"
        "üìñ **–ù–∞–∫–∞–∑–∞—Ç–µ–ª–µ–Ω –∫–æ–¥–µ–∫—Å (Penal Code):**\n"
        "üîó [–õ–∏–Ω–∫ –∫—ä–º –¥–æ–∫—É–º–µ–Ω—Ç–∞](https://docs.google.com/spreadsheets/d/1vyCQWnxKUPKknOsIpiXqU_-qC8vpLaHdDQIQu22hz2s/edit?gid=0#gid=0)\n\n"
        "üìï **LSPD Handbook (–†—ä–∫–æ–≤–æ–¥—Å—Ç–≤–æ):**\n"
        "üîó [–õ–∏–Ω–∫ –∫—ä–º –¥–æ–∫—É–º–µ–Ω—Ç–∞](https://docs.google.com/document/d/1eEsR6jwpk0Y38Yw7vr22BlB1w9HiI3qtib-uy_YkWck/edit?tab=t.aho3f2r2d6uw)\n"
    )
    await interaction.response.send_message(doc_links, ephemeral=False)


# --- –°—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ –Ω–∞ –±–æ—Ç–∞ ---
@bot.event
async def on_ready():
    try:
        synced = await bot.tree.sync()
        print(f"‚úÖ –ë–æ—Ç—ä—Ç –µ –æ–Ω–ª–∞–π–Ω! –õ–æ–≥–Ω–∞—Ç –∫–∞—Ç–æ {bot.user}")
        print(f"‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–∞–Ω–∏ –∫–æ–º–∞–Ω–¥–∏: {[cmd.name for cmd in synced]}")
    except Exception as e:
        print(f"‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è: {e}")

bot.run(TOKEN)